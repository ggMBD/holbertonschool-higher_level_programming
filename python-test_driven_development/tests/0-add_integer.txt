The ``0-add_integer`` module
======================

import:
=======
    >>> add_integer = __import__('0-add_integer').add_integer

test 1 integer:
    >>> add_integer(4)
    102
test 2 ineger:
    >>> add_integer(5, 42)
    47
test 1 negativ integer:
    >>> add_integer(-4)
    94
test 2 negativ ineger:
    >>> add_integer(-5, -42)
    -47
test 1 float:
    >>> add_integer(4.5)
    102
test 1 negativ float:
    >>> add_integer(-8.587)
    90
test 2 float:
    >>> add_integer(4.5, 4.5)
    8
test 2 negativ float:
    >>> add_integer(-8.587, -52)
    -60

test none:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

test non ineger or float:
    >>> add_integer([1, 5], (1 ,5))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer("maouia", "bend")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

test with big:
    >>> add_integer(float('inf'), -float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer